# Sample .bashrc for SuSE Linux
# Copyright (c) SuSE GmbH Nuernberg

# There are 3 different types of shells in bash: the login shell, normal shell
# and interactive shell. Login shells read ~/.profile and interactive shells
# read ~/.bashrc; in our setup, /etc/profile sources ~/.bashrc - thus all
# settings made here will also take effect in a login shell.
#
# NOTE: It is recommended to make language settings in ~/.profile rather than
# here, since multilingual X sessions would not work properly if LANG is over-
# ridden in every subshell.

# Some applications read the EDITOR variable to determine your favourite text
# editor. So uncomment the line below and enter the editor of your choice :-)
#export EDITOR=/usr/bin/vim
#export EDITOR=/usr/bin/mcedit

# For some news readers it makes sense to specify the NEWSSERVER variable here
#export NEWSSERVER=your.news.server

# If you want to use a Palm device with Linux, uncomment the two lines below.
# For some (older) Palm Pilots, you might need to set a lower baud rate
# e.g. 57600 or 38400; lowest is 9600 (very slow!)
#
#export PILOTPORT=/dev/pilot
#export PILOTRATE=115200

test -s ~/.alias && . ~/.alias || true

# Opensocial
M3_HOME=/home/i860660/installs/apache-maven-3.2.5
export M3_HOME
M3="$M3_HOME/bin"
export M3
# Jam specific stuff
export TAG_WITH_I18N_ORIGIN_OFF=1
export JAM_SALESDEMO_DEV_DEMO_DIR=/home/i860660/code/demodata
export JAM_SALESDEMO_DEV_BIZX_IDP=qacand.sflab.ondemand.com
export CT_USE_MEMCACHE=false
export DISABLE_WEBPACK_SERVER=false
# Node version manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
# Paul Wang's useful exports for devoops
export CACTUS_HOST='mo-39ed81049.lab-rot.saas.sap.corp'
export HUGHIE_HOST='mo-3412121a1.mo.sap.corp'
export SLES_NODES=(10.160.193.158 10.160.194.151 10.160.206.105 10.160.196.245 10.160.201.91 10.160.204.19 10.160.206.151 10.160.206.200)
# Go
export GOPATH="/home/i860660/go"
export GOROOT="/usr/local/go" 

# PATH START
# Go
# Update pandoc
export PATH="/home/i860660/.local/bin:$PATH"
# Opensocial, Maven
export PATH="$M3:$PATH"
# More zulip bins
export PATH="$PATH:/home/i860660/installs/zulip-0.2.5/bin"
# Golang
export PATH="$PATH:/usr/local/go/bin"
# Go projects
export PATH="$PATH:$GOPATH/bin"
# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="/opt/chef/bin:/opt/chef/embedded/bin:$PATH" # Add Chef to PATH
export PATH="$HOME/.yarn/bin:$PATH"
#Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
# PATH END

# Fun with aliasing
alias fuck='sudo $(history -p \!\!)'
alias meme='sudo /etc/init.d/memcached start -u nobody'
alias fixopensocial='sudo netstat -tupln | grep 8080'
alias jump="ssh -t i860660@jumphost-dc13.mo.sap.corp"
alias gits="git status"
alias gitp="git fetch upstream && git checkout master && git merge upstream/master && git push origin master && git status && echo 'Checkout your working branch, then git rebase -Xtheirs master' "
## ATTENTION: the rails aliases are borked for some reason because they can't set env variables :(
#alias railme='cd ~/code/ct && DEV_SHINDIG_HOST=gadgets.sap.corp TAG_WITH_I18N_ORIGIN_OFF=TRUE rails s -b 0.0.0.0'
#alias railme2='cd ~/code/ct && rails s -b 0.0.0.0 -p 3007 -P ./tmp/pids/assetserver.pid'
#alias opensocial='cd ~/code/opensocial && mvn -Ddev.shindig.host=gadgets.sap.corp -Dmaven.repo.local=maven-repo clean jetty:run'

# Go quickies
alias gotest='go test $(go list ./... | grep -v vendor/)'
alias gofmt='go fmt $(go list ./... | grep -v vendor/)'
alias govet='go vet $(go list ./... | grep -v vendor/)'
alias gofix='go fix $(go list ./... | grep -v vendor/)'
alias gocover='go test $(go list ./... | grep -v vendor/) -cover'
alias gobuild='pushd $GOPATH && GOOS=linux GOARCH=amd64 go build -v github.wdf.sap.corp/sap-jam/jamctl; popd'

# cd quickies
alias cdct="cd ~/code/ct"
alias cdch="cd ~/code/chef-repo"
alias cdps="cd ~/code/ps"
alias cdctl="cd ~/go/src/github.wdf.sap.corp/sap-jam/jamctl"
alias cddep="cd ~/go/src/github.wdf.sap.corp/i860660/grab-dependencies"

# vim
alias vimrc="vim ~/.vimrc"

# Paul Wang's useful aliases for devoops et al.
alias devops="ssh -t i860660@jumphost-dc13.mo.sap.corp /tmp/sshpass -p cubical3 ssh -o StrictHostKeyChecking=no devops@devops.lab-rot.saas.sap.corp"
alias gocactus="ssh -t i860660@jumphost-dc13.mo.sap.corp /tmp/sshpass -p cubical3 ssh -o StrictHostKeyChecking=no -t devops@devops.lab-rot.saas.sap.corp ssh cubetree@$CACTUS_HOST"
alias bashrc="vim ~/.bashrc && . ~/.bashrc"
alias cdc="cd ~/code"
alias cds="cd ~/sandbox"
alias cdg="cd /home/dev/go/src/github.wdf.sap.corp/sap-jam/jamctl/"
alias me="sudo su - i860660"
alias vdevops="sshpass -p cubical3 ssh -o StrictHostKeyChecking=no devops@10.160.197.64"

# Hughie aliases: sudo su afterwards
alias hughie="ssh mo-3412121a1.mo.sap.corp"

# ZULIP STUFF
carol-send() {
case $# in
  3)
    curl https://zulip.itc.sap.com/api/v1/messages -u carol.ng@sap.com:4dRNmwkNTQnZSYw5elQBOCjJiJjx634K -d "type=stream" -d "to=$1" -d "subject=$2" -d "content=$3"
    ;;
  2)
    curl https://zulip.itc.sap.com/api/v1/messages -u carol.ng@sap.com:4dRNmwkNTQnZSYw5elQBOCjJiJjx634K -d "type=private" -d "to=$1" -d "content=$2"
    ;;
  *)
    echo "carol-send <stream> <subject> <message>"
    echo "carol-send <recipient e-mail> <message>"
    ;;
esac
}
bot-send() {
case $# in
  3)
    curl https://zulip.itc.sap.com/api/v1/messages -u carol.ng-bot@sap.com:zOixY8G1RSkpSaKg0ieEuuu6TIy7SqZL -d "type=stream" -d "to=$1" -d "subject=$2" -d "content=$3"
    ;;
  2)
    case $1 in
      carolbot)
        MAIL=carol.ng-bot@sap.com
        ;;
      carol)
        MAIL=carol.ng@sap.com
        ;;
      justin)
        MAIL=jookyung.yoon@sap.com
        ;;
      eva)
        MAIL=e.tay@sap.com
        ;;
      harsimran)
        MAIL=harsimran.mann@sap.com
        ;;
      geoff)
        MAIL=geoffrey.mantel@sap.com
        ;;
      paul)
        MAIL=paul.wang02@sap.com
        ;;
      *)
        MAIL=$1
    esac
    curl https://zulip.itc.sap.com/api/v1/messages -u carol.ng-bot@sap.com:zOixY8G1RSkpSaKg0ieEuuu6TIy7SqZL -d "type=private" -d "to=$MAIL" -d "content=$2"
    ;;
  *)
    echo "bot-send <stream> <subject> <message>"
    echo "bot-send <recipient e-mail> <message>"
    ;;
esac
}

# Paul Wang's .bashrc functions for devoops
function sshm(){
ssh i860660@"$1"
}

function sshc(){
ssh cubetree@"$1"
}

function sshr(){
ssh root@"$1"
}

function sshdc13(){
ssh -t i860660@jumphost-dc13.mo.sap.corp /tmp/sshpass -p cubical3 ssh -o StrictHostKeyChecking=no -t devops@devops.lab-rot.saas.sap.corp ssh cubetree@"$1"
}

get_sles(){
INDEX=$(($1 - 1))
if [ -z $1 ]; then echo ${SLES_NODES[*]} && return; fi
echo ${SLES_NODES[$INDEX]}
}

function startJam(){
cd ~/code/ct && JAM_WEBSERVER_NAME=localhost:3000 rake jobs:work & rails s
}

sshj(){
INDEX=$(($1 - 1))
sshpass -p bobobo ssh jenkins@${SLES_NODES[$INDEX]}
}
runcap() {
  #REVISION=$(git log -1 --pretty=oneline | awk '{print $1}') rvm "$GEMSET" do cap -S instance=$INSTANCE $STAGE "$@"
 cap -S instance=$INSTANCE "$@"
  if ! [ $? -eq 0 ]
  then
    echo -e "FATAL: the following task failed:\ncap -S instance=$INSTANCE $@\nNow exiting..."
  fi
}

minitest() {
case $# in
  2)
    ruby -Itest:. "$1" -n "$2"
    ;;
  1)
    ruby -Itest:. "$1"
    ;;
  *)
    echo "Usage: minitest <file> <test>"
    ;;
esac
}


